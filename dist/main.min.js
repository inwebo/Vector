!function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e),i.d(e,"MathExtension",(function(){return r})),i.d(e,"Vector2D",(function(){return h})),i.d(e,"Vector2DValidator",(function(){return n}));const s=180/Math.PI;var r=(Math.__proto__.radiansToDegrees||(Math.__proto__.radiansToDegrees=t=>t*s),void(Math.__proto__.degreesToRadians||(Math.__proto__.degreesToRadians=t=>t*s)));class a{static instanceofVector(t){if(!(t instanceof h)){throw new TypeError("Arg is not an instance of Vector2D, input type was "+typeof t)}}static validate(...t){t.forEach(t=>{a.instanceofVector(t)})}}var n=a;class h{setX(t){return this._x=t,this}getX(){return this._x}setY(t){return this._y=t,this}getY(){return this._y}set(t,e){return this.setX(t),this.setY(e),this}static fromArray(t=[]){if(t=t||[],!Array.isArray(t))throw new TypeError(`Vector.fromArray() arg is not an array, type was '${typeof t}'`);return new h(t[0]||0,t[1]||0)}static fromObject(t){return new h((t=t||{}).x||0,t.y||0)}constructor(t=0,e=0){this.setX(t),this.setY(e)}add(t){return n.validate(t),this.setX(this.getX()+t.getX()),this.setY(this.getY()+t.getY()),this}addX(t){return this.setX(this.getX()+t),this}addY(t){return this.setY(this.getY()+t),this}static add(t,e){return n.validate(t,e),new h(t.getX()+e.getX(),t.getY()+e.getY())}static addX(t,e){return n.validate(t,e),new h(t.getX()+e.getX(),t.getY())}static addY(t,e){return n.validate(t,e),new h(t.getX(),t.getY()+e.getY())}addScalar(t){return this.addX(t),this.addY(t),this}static addScalar(t,e){return n.validate(t),t.addX(e),t.addY(e),t}substractScalarX(t){return this.setX(this.getX()-t),this}substractScalarY(t){return this.setY(this.getY()-t),this}substract(t){return n.validate(t),this.substractScalarX(t.getX()),this.substractScalarY(t.getY()),this}static substract(t,e){return n.validate(t,e),new h(t.getX()-e.getX(),t.getY()-e.getY())}multiply(t){return n.validate(t),this.multiplyX(t),this.multiplyY(t),this}multiplyX(t){return n.validate(t),this.setX(this.getX()*t.getX()),this}multiplyY(t){return n.validate(t),this.setY(this.getY()*t.getY()),this}static multiply(t,e){return n.validate(t,e),new h(t.getX()*e.getX(),t.getY()*e.getY())}divide(t){return n.validate(t),this._x=this.getX()/t.getX(),this._y=this.getY()/t.getY(),this}divideScalar(t){return this.setX(this.getX()/t),this.setY(this.getY()/t),this}divideScalarX(t){const e=this.getX()/t;return this.setX(e),this}divideScalarY(t){return this.setY(this.getY()/t),this}static divide(t,e){return n.validate(t,e),new h(t.getX()/e.getX(),t.getY()/e.getY())}dot(t){return n.validate(t),this.getX()*t.getX()+this.getY()*t.getY()}static dot(t,e){return n.validate(t,e),t.getX()*e.getX()+t.getY()*e.getY()}cross(t){return n.validate(t),this.getX()*t.getY()-this.getY()*t.getX()}static cross(t,e){return n.validate(t,e),t.getX()*e.getY()-t.getY()*e.getX()}magnitude(){return Math.sqrt(this.dot(this))}static magnitude(t,e){return n.validate(t,e),Math.sqrt(h.dot(t,e))}magnitudeSq(){return Math.pow(this.getX(),2)+Math.pow(this.getY(),2)}static magnitudeSq(t){return n.validate(t),Math.pow(t.getX(),2)+Math.pow(t.getY(),2)}horizontalAngle(){return Math.atan2(this.getY(),this.getX())}angle(){return this.horizontalAngle()}rotate(t){return this._x=this.getX()*Math.cos(t)-this.getY()*Math.sin(t),this._y=this.getX()*Math.sin(t)+this.getY()*Math.cos(t),this}rotateDegrees(t){return this.rotate(Math.degreesToRadians(t)),this}rotateBy(t){return this.rotate(this.angle()+t)}rotateByDegrees(t){return this.rotateBy(this.angle()+Math.radiansToDegrees(t))}clamp(t,e,i=!0){return n.validate(t),n.validate(e),!0===i&&(this.getX()<t.getX()&&this.setX(t.getX()),this.getX()>e.getY()&&this.setX(e.getY()),this.getY()<t.getY()&&this.setY(t.getY()),this.getY()>e.getY()&&this.setY(e.getY())),!1===i&&(this.getX()<=t.getX()&&this.setX(t.getX()),this.getX()>=e.getY()&&this.setX(e.getY()),this.getY()<=t.getY()&&this.setY(t.getY()),this.getY()>=e.getY()&&this.setY(e.getY())),this}clone(){return new h(this.getX(),this.getY())}toArray(){return[this.getX(),this.getY()]}toString(t=","){return this.toArray().join(t)}toObject(){return{x:this.getX(),y:this.getY()}}round(){this.setX(Math.round(this._x)),this.setY(Math.round(this._y))}floor(){this.setX(Math.floor(this._x)),this.setY(Math.floor(this._y))}copy(t){return n.validate(t),this.setX(t.getX()),this.setY(t.getY()),this}equals(t){return n.validate(t),this.getX()===t.getX()&&this.getY()===t.getY()}static equals(t,e){return n.validate(t,e),t.getX()===e.getX()&&t.getY()===e.getY()}zero(){return this.setX(0),this.setY(0),this}static zero(t){n.validate(t),t._x=0,t._y=0}isZero(){return 0===this.getX()&&0===this.getY()}static isZero(t){return n.validate(t),0===t.getX()&&0===t.getY()}length(){return this.magnitude()}static length(t,e){return n.validate(t,e),h.magnitude(t,e)}negative(){return this.setX(-this.getX()),this.setY(-this.getY()),this}negativeX(){return this.setX(-this.getX()),this}negativeY(){return this.setY(-this.getY()),this}static negative(t){return n.validate(t),new h(-t.getX(),-t.getY())}distanceX(t){return n.validate(t),this.getX()-t.getX()}distanceAbs(t){return n.validate(t),new h(this.distanceXAbs(t),this.distanceYAbs(t))}distanceXAbs(t){return n.validate(t),Math.abs(this.distanceX(t))}distanceY(t){return n.validate(t),this.getY()-t.getY()}distanceYAbs(t){return n.validate(t),Math.abs(this.distanceY(t))}distance(t){return n.validate(t),Math.sqrt(this.distanceSq(t))}distanceSq(t){return n.validate(t),this.distanceX(t)*this.distanceX(t)+this.distanceY(t)*this.distanceY(t)}}}]);